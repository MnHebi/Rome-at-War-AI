
(defrule
	(true)
=>
	(set-strategic-number sn-dock-avoidance-factor -10000)
	(set-strategic-number sn-dock-proximity-factor 1000)
	(set-strategic-number sn-dock-placement-mode -1)
	(set-strategic-number sn-dock-training-filter 2)
	(set-strategic-number sn-minimum-dropsite-buffer 50)
	(set-strategic-number sn-mule-cart-dropsite-placement mining-camp)
	(set-strategic-number sn-do-not-scale-for-difficulty-level 1)
	(set-strategic-number sn-dropsite-separation-distance 4)
	(set-strategic-number sn-scale-minimum-attack-group-size 0)
	(set-strategic-number sn-zero-priority-distance 255)
	(set-strategic-number sn-initial-exploration-required 0)
	(set-strategic-number sn-cap-civilian-builders 200)
	(set-strategic-number sn-attack-group-size-randomness 0)
	(set-strategic-number sn-attack-group-gather-spacing 255)

	(disable-self)
)

(defrule
	(up-timer-status t-strategicnumber != timer-running)
=>
	(enable-timer t-strategicnumber 15)
)

(defrule
	(up-timer-status t-strategicnumber == timer-triggered)
=>
	(up-modify-sn sn-safe-town-size g:= safe-townsize)
	(up-modify-sn sn-minimum-town-size g:= inner-townsize)
)

(defrule
		(current-age == iron-age)
=>
		(set-strategic-number sn-preferred-mill-placement 0)
		(disable-self)
)

(defrule
		(current-age == early-antiquity-age)
=>
		(set-strategic-number sn-preferred-mill-placement 1)
		(disable-self)
)

(defrule
		(current-age == middle-antiquity-age)
=>
		(set-strategic-number sn-preferred-mill-placement 1)
		(disable-self)
)

(defrule
		(current-age == imperial-age)
=>
		(set-strategic-number sn-preferred-mill-placement 1)
		(disable-self)
)

#load-if-not-defined DIFFICULTY-MODERATE
#load-if-not-defined DIFFICULTY-HARD
#load-if-not-defined DIFFICULTY-HARDEST
#load-if-not-defined DIFFICULTY-EXTREME

(defrule
	(true)
=>
	(set-strategic-number sn-consecutive-idle-unit-limit 10)
	
	(disable-self)
)

#end-if
#end-if
#end-if
#end-if

#load-if-defined DIFFICULTY-MODERATE

(defrule
	(true)
=>
	(set-strategic-number sn-consecutive-idle-unit-limit 0)
	
	(disable-self)
)

(defrule
	(true)
=>
	(set-strategic-number sn-attack-intelligence 1)
	(set-strategic-number sn-allow-civilian-defense 2)
	(set-strategic-number sn-attack-winning-player 1)
	(set-strategic-number sn-attack-winning-player-factor 32767)
	(set-strategic-number sn-coop-share-information 1)
	(set-strategic-number sn-enable-training-queue 2)
	(set-strategic-number sn-enable-research-queue 1)
	(set-strategic-number sn-enable-offensive-priority 1)
	(set-strategic-number sn-enable-patrol-attack 1)
	
	(disable-self)
)

(defrule
	(current-age == iron-age)
=>
	(set-strategic-number sn-disable-tower-priority 1)

	(disable-self)
)

(defrule
	(current-age == early-antiquity-age)
=>
	(set-strategic-number sn-disable-tower-priority 1)

	(disable-self)
)

(defrule
	(current-age == middle-antiquity-age)
=>
	(set-strategic-number sn-disable-tower-priority 0)

	(disable-self)
)

(defrule
	(current-age == imperial-age)
=>
	(set-strategic-number sn-disable-tower-priority 0)

	(disable-self)
)

#end-if

#load-if-defined DIFFICULTY-HARD

(defrule
	(true)
=>
	(set-strategic-number sn-consecutive-idle-unit-limit 0)
	
	(disable-self)
)

(defrule
	(true)
=>
	(set-strategic-number sn-attack-intelligence 1)
	(set-strategic-number sn-allow-civilian-defense 2)
	(set-strategic-number sn-attack-winning-player 1)
	(set-strategic-number sn-attack-winning-player-factor 32767)
	(set-strategic-number sn-coop-share-information 1)
	(set-strategic-number sn-enable-training-queue 2)
	(set-strategic-number sn-enable-research-queue 1)
	(set-strategic-number sn-enable-offensive-priority 1)
	(set-strategic-number sn-enable-patrol-attack 1)

	(disable-self)
)

(defrule
	(current-age == iron-age)
=>
	(set-strategic-number sn-disable-tower-priority 1)

	(disable-self)
)

(defrule
	(current-age == early-antiquity-age)
=>
	(set-strategic-number sn-disable-tower-priority 1)

	(disable-self)
)

(defrule
	(current-age == middle-antiquity-age)
=>
	(set-strategic-number sn-disable-tower-priority 0)

	(disable-self)
)

(defrule
	(current-age == imperial-age)
=>
	(set-strategic-number sn-disable-tower-priority 0)

	(disable-self)
)

#end-if

#load-if-defined DIFFICULTY-HARDEST

(defrule
	(true)
=>
	(set-strategic-number sn-consecutive-idle-unit-limit 0)
	
	(disable-self)
)

(defrule
	(true)
=>
	(set-strategic-number sn-attack-intelligence 1)
	(set-strategic-number sn-allow-civilian-defense 2)
	(set-strategic-number sn-attack-winning-player 1)
	(set-strategic-number sn-attack-winning-player-factor 32767)
	(set-strategic-number sn-coop-share-information 1)
	(set-strategic-number sn-enable-training-queue 2)
	(set-strategic-number sn-enable-research-queue 1)
	(set-strategic-number sn-enable-offensive-priority 1)
	(set-strategic-number sn-enable-patrol-attack 1)

	(disable-self)
)

(defrule
	(current-age == iron-age)
=>
	(set-strategic-number sn-disable-tower-priority 1)

	(disable-self)
)

(defrule
	(current-age == early-antiquity-age)
=>
	(set-strategic-number sn-disable-tower-priority 1)

	(disable-self)
)

(defrule
	(current-age == middle-antiquity-age)
=>
	(set-strategic-number sn-disable-tower-priority 0)

	(disable-self)
)

(defrule
	(current-age == imperial-age)
=>
	(set-strategic-number sn-disable-tower-priority 0)

	(disable-self)
)

#end-if

#load-if-defined DIFFICULTY-EXTREME

(defrule
	(true)
=>
	(set-strategic-number sn-consecutive-idle-unit-limit 0)
	
	(disable-self)
)

(defrule
	(true)
=>
	(set-strategic-number sn-attack-intelligence 1)
	(set-strategic-number sn-allow-civilian-defense 2)
	(set-strategic-number sn-attack-winning-player 1)
	(set-strategic-number sn-attack-winning-player-factor 32767)
	(set-strategic-number sn-coop-share-information 1)
	(set-strategic-number sn-enable-training-queue 2)
	(set-strategic-number sn-enable-research-queue 1)
	(set-strategic-number sn-enable-offensive-priority 1)
	(set-strategic-number sn-enable-patrol-attack 1)

	(disable-self)
)

(defrule
	(current-age == iron-age)
=>
	(set-strategic-number sn-disable-tower-priority 1)

	(disable-self)
)

(defrule
	(current-age == early-antiquity-age)
=>
	(set-strategic-number sn-disable-tower-priority 1)

	(disable-self)
)

(defrule
	(current-age == middle-antiquity-age)
=>
	(set-strategic-number sn-disable-tower-priority 0)

	(disable-self)
)

(defrule
	(current-age == imperial-age)
=>
	(set-strategic-number sn-disable-tower-priority 0)

	(disable-self)
)

#end-if

(defrule
	(or
		(goal attack-type-land TOWN-SIZE)
		(goal attack-type-land PERCENTAGE)
	)
	(and
		(up-compare-sn sn-minimum-attack-group-size c:> 0)
		(and
			(up-compare-sn sn-maximum-attack-group-size c:> 0)
			(up-compare-sn sn-number-attack-groups c:> 0)
		)
	)
=>
	(up-modify-sn sn-minimum-attack-group-size c:= 0)
	(up-modify-sn sn-maximum-attack-group-size c:= 0)
	(up-modify-sn sn-number-attack-groups c:= 0)
)

(defrule
	(goal attack-type-land GROUP)
	(and
		(up-compare-sn sn-minimum-attack-group-size g:< gl-pop-atkgrp-minsize)
		(and
			(up-compare-sn sn-maximum-attack-group-size g:< gl-pop-atkgrp-maxsize)
			(up-compare-sn sn-number-attack-groups g:< gl-pop-number-groups)
		)
	)
=>
	(up-modify-sn sn-minimum-attack-group-size g:= gl-pop-atkgrp-minsize)
	(up-modify-sn sn-maximum-attack-group-size g:= gl-pop-atkgrp-maxsize)
	(up-modify-sn sn-number-attack-groups g:= gl-pop-number-groups)
)

(defrule
	(or
		(goal attack-type-land TOWN-SIZE)
		(goal attack-type-land PERCENTAGE)
	)
	(and
		(up-compare-sn sn-minimum-boat-attack-group-size c:> 0)
		(and
			(up-compare-sn sn-maximum-boat-attack-group-size c:> 0)
			(up-compare-sn sn-number-boat-attack-groups c:> 0)
		)
	)
=>
	(up-modify-sn sn-minimum-boat-attack-group-size c:= 0)
	(up-modify-sn sn-maximum-boat-attack-group-size c:= 0)
	(up-modify-sn sn-number-boat-attack-groups c:= 0)
)

(defrule
	(goal attack-type-sea GROUP)
	(and
		(up-compare-sn sn-minimum-boat-attack-group-size g:< gl-pop-atkgrp-minsize)
		(and
			(up-compare-sn sn-maximum-boat-attack-group-size g:< gl-pop-atkgrp-maxsize)
			(up-compare-sn sn-number-boat-attack-groups g:< gl-pop-number-groups)
		)
	)
=>
	(up-modify-sn sn-minimum-boat-attack-group-size g:= gl-pop-atkgrp-minsize)
	(up-modify-sn sn-maximum-boat-attack-group-size g:= gl-pop-atkgrp-maxsize)
	(up-modify-sn sn-number-boat-attack-groups g:= gl-pop-number-groups)
)

;disable civilian defense if we incurring losses
(defrule
	(up-compare-goal gl-total-civilian-losses g:>= gl-one-percent)
	(up-compare-sn sn-allow-civilian-defense c:> 0)
=>
	(up-modify-sn sn-allow-civilian-defense c:= 0)
)

