(defrule
	(up-timer-status farm-check-timer == timer-disabled)
=>
	(enable-timer farm-check-timer 30)
)

(defrule
	(goal resources-depleted NO)
	(and
		(goal current-phase 1)
		(and
			(up-object-type-count c: lumber-camp == 0)
			(up-object-type-count c: mill == 0)
		)
	)
=>
	(up-modify-sn sn-food-gatherer-percentage c:= 80)
	(up-modify-sn sn-wood-gatherer-percentage c:= 10)
	(up-modify-sn sn-gold-gatherer-percentage c:= 0)
	(up-modify-sn sn-stone-gatherer-percentage c:= 0)
	(up-modify-goal desired-number-farms c:= 0)
	(up-modify-goal desired-number-lumbercamps c:= 1)
	(up-modify-goal desired-number-mills c:= 1)
	(up-modify-goal desired-number-miningcamps c:= 1)
	(chat-local-to-self "initial resource gathering settings")
	
	(disable-self)
)

(defrule
	(goal resources-depleted NO)
	(and
		(goal current-phase 1)
		(and
			(up-object-type-count c: lumber-camp >= 1)
			(up-object-type-count c: mill == 0)
		)
	)
=>
	(up-modify-sn sn-food-gatherer-percentage c:= 40)
	(up-modify-sn sn-wood-gatherer-percentage c:= 60)
	(up-modify-sn sn-gold-gatherer-percentage c:= 0)
	(up-modify-sn sn-stone-gatherer-percentage c:= 0)
	(up-modify-goal desired-number-farms c:= 0)
	(up-modify-goal desired-number-lumbercamps c:= 1)
	(up-modify-goal desired-number-mills c:= 1)
	(up-modify-goal desired-number-miningcamps c:= 1)
	(chat-local-to-self "have lumber camp resource gathering settings")
	
	(disable-self)
)

(defrule
	(goal resources-depleted NO)
	(and
		(goal current-phase 1)
		(and
			(up-object-type-count c: lumber-camp >= 1)
			(up-object-type-count c: mill >= 1)
		)
	)
=>
	(up-modify-sn sn-food-gatherer-percentage c:= 90)
	(up-modify-sn sn-wood-gatherer-percentage c:= 10)
	(up-modify-sn sn-gold-gatherer-percentage c:= 0)
	(up-modify-sn sn-stone-gatherer-percentage c:= 0)
	(up-modify-goal desired-number-farms c:= 21)
	(up-modify-goal desired-number-lumbercamps c:= 1)
	(up-modify-goal desired-number-mills c:= 1)
	(up-modify-goal desired-number-miningcamps c:= 1)
	(chat-local-to-self "have mill & lumber camp resource gathering settings")
	
	(disable-self)
)

(defrule
	(goal resources-depleted NO)
	(and
		(goal current-phase 2)
		(goal age-up-started EARLY-ANTIQUITY)
	)
=>
	(up-modify-sn sn-food-gatherer-percentage c:= 50)
	(up-modify-sn sn-wood-gatherer-percentage c:= 40)
	(up-modify-sn sn-gold-gatherer-percentage c:= 10)
	(up-modify-sn sn-stone-gatherer-percentage c:= 0)
	(up-modify-goal desired-number-farms c:= 12)
	(up-modify-goal desired-number-lumbercamps c:= 2)
	(up-modify-goal desired-number-mills c:= 2)
	(up-modify-goal desired-number-miningcamps c:= 2)
	(chat-local-to-self "aging to early antiquity age resource gathering settings")
	
	(disable-self)
)

(defrule
	(goal resources-depleted NO)
	(and
		(goal current-phase 3)
		(and
			(goal age-up-finished EARLY-ANTIQUITY)
			(and
				(goal age-up-started EARLY-ANTIQUITY)
				(and
					(building-type-count-total market == 0)
					(building-type-count-total blacksmith == 0)
				)
			)
		)
	)
=>
	(up-modify-sn sn-food-gatherer-percentage c:= 20)
	(up-modify-sn sn-wood-gatherer-percentage c:= 80)
	(up-modify-sn sn-gold-gatherer-percentage c:= 0)
	(up-modify-sn sn-stone-gatherer-percentage c:= 0)
	(up-modify-goal desired-number-farms c:= 0)
	(up-modify-goal desired-number-lumbercamps c:= 3)
	(up-modify-goal desired-number-mills c:= 3)
	(up-modify-goal desired-number-miningcamps c:= 3)
)

(defrule
	(goal resources-depleted NO)
	(and
		(goal current-phase 3)
		(and
			(goal age-up-finished EARLY-ANTIQUITY)
			(and
				(food-amount < 800)
				(and
					(goal age-up-started EARLY-ANTIQUITY)
					(and
						(building-type-count-total market > 0)
						(building-type-count-total blacksmith > 0)
					)
				)
			)
		)
	)
=>
	(up-modify-sn sn-food-gatherer-percentage c:= 80)
	(up-modify-sn sn-wood-gatherer-percentage c:= 10)
	(up-modify-sn sn-gold-gatherer-percentage c:= 10)
	(up-modify-sn sn-stone-gatherer-percentage c:= 0)
	(up-modify-goal desired-number-farms c:= 19)
	(up-modify-goal desired-number-lumbercamps c:= 3)
	(up-modify-goal desired-number-mills c:= 3)
	(up-modify-goal desired-number-miningcamps c:= 3)
)

(defrule
	(goal resources-depleted NO)
	(and
		(goal current-phase 3)
		(and
			(goal age-up-finished EARLY-ANTIQUITY)
			(and
				(food-amount > 800)
				(and
					(goal age-up-started EARLY-ANTIQUITY)
					(and
						(building-type-count-total market > 0)
						(building-type-count-total blacksmith > 0)
					)
				)
			)
		)
	)
=>
	(up-modify-sn sn-food-gatherer-percentage c:= 40)
	(up-modify-sn sn-wood-gatherer-percentage c:= 20)
	(up-modify-sn sn-gold-gatherer-percentage c:= 40)
	(up-modify-sn sn-stone-gatherer-percentage c:= 0)
	(up-modify-goal desired-number-farms c:= 19)
	(up-modify-goal desired-number-lumbercamps c:= 3)
	(up-modify-goal desired-number-mills c:= 3)
	(up-modify-goal desired-number-miningcamps c:= 3)
)

(defrule
	(goal resources-depleted NO)
	(and
		(goal current-phase 3)
		(and
			(goal age-up-finished EARLY-ANTIQUITY)
			(and
				(goal age-up-started MIDDLE-ANTIQUITY)
				(and
					(building-type-count-total market > 0)
					(building-type-count-total blacksmith > 0)
				)
			)
		)
	)
=>
	(up-modify-sn sn-food-gatherer-percentage c:= 40)
	(up-modify-sn sn-wood-gatherer-percentage c:= 40)
	(up-modify-sn sn-gold-gatherer-percentage c:= 10)
	(up-modify-sn sn-stone-gatherer-percentage c:= 10)
	(up-modify-goal desired-number-farms c:= 11)
	(up-modify-goal desired-number-lumbercamps c:= 3)
	(up-modify-goal desired-number-mills c:= 3)
	(up-modify-goal desired-number-miningcamps c:= 3)
)

(defrule
	(goal resources-depleted NO)
	(and
		(current-age-time < 120)
		(and
			(goal current-phase 4)
			(wood-amount < 150)
		)
	)
=>
	(up-modify-sn sn-food-gatherer-percentage c:= 10)
	(up-modify-sn sn-wood-gatherer-percentage c:= 80)
	(up-modify-sn sn-gold-gatherer-percentage c:= 5)
	(up-modify-sn sn-stone-gatherer-percentage c:= 5)
	(up-modify-goal desired-number-farms c:= 3)
	(up-modify-goal desired-number-lumbercamps c:= 4)
	(up-modify-goal desired-number-mills c:= 4)
	(up-modify-goal desired-number-miningcamps c:= 4)
)

(defrule
	(goal resources-depleted NO)
	(and
		(current-age-time < 120)
		(and
			(goal current-phase 4)
			(wood-amount > 150)
		)
	)
=>
	(up-modify-sn sn-food-gatherer-percentage c:= 40)
	(up-modify-sn sn-wood-gatherer-percentage c:= 45)
	(up-modify-sn sn-gold-gatherer-percentage c:= 5)
	(up-modify-sn sn-stone-gatherer-percentage c:= 5)
	(up-modify-goal desired-number-farms c:= 3)
	(up-modify-goal desired-number-lumbercamps c:= 4)
	(up-modify-goal desired-number-mills c:= 4)
	(up-modify-goal desired-number-miningcamps c:= 4)
)

(defrule
	(goal resources-depleted NO)
	(and
		(current-age-time > 120)
		(and
			(goal current-phase 4)
			(and
				(building-type-count-total university == 0)
				(and
					(building-type-count-total monastery == 0)
					(building-type-count-total siege-workshop == 0)
				)
			)
		)
	)
=>
	(up-modify-sn sn-food-gatherer-percentage c:= 20)
	(up-modify-sn sn-wood-gatherer-percentage c:= 65)
	(up-modify-sn sn-gold-gatherer-percentage c:= 10)
	(up-modify-sn sn-stone-gatherer-percentage c:= 5)
	(up-modify-goal desired-number-farms g:= gl-fourty-percent)
	(up-modify-goal desired-number-lumbercamps c:= 4)
	(up-modify-goal desired-number-mills c:= 4)
	(up-modify-goal desired-number-miningcamps c:= 4)
)

(defrule
	(goal resources-depleted NO)
	(and
		(current-age-time > 120)
		(and
			(goal current-phase 4)
			(and
				(building-type-count-total university > 0)
				(or
					(building-type-count-total monastery > 0)
					(building-type-count-total siege-workshop > 0)
				)
			)
		)
	)
=>
	(up-modify-sn sn-food-gatherer-percentage c:= 40)
	(up-modify-sn sn-wood-gatherer-percentage c:= 15)
	(up-modify-sn sn-gold-gatherer-percentage c:= 40)
	(up-modify-sn sn-stone-gatherer-percentage c:= 5)
	(up-modify-goal desired-number-farms g:= gl-fourty-percent)
	(up-modify-goal desired-number-lumbercamps c:= 4)
	(up-modify-goal desired-number-mills c:= 4)
	(up-modify-goal desired-number-miningcamps c:= 4)
)

(defrule
	(goal resources-depleted NO)
	(goal current-phase 5)
=>
	(up-modify-sn sn-food-gatherer-percentage c:= 40)
	(up-modify-sn sn-wood-gatherer-percentage c:= 45)
	(up-modify-sn sn-gold-gatherer-percentage c:= 10)
	(up-modify-sn sn-stone-gatherer-percentage c:= 5)
	(up-modify-goal desired-number-farms g:= gl-fourty-percent)
	(up-modify-goal desired-number-lumbercamps c:= 5)
	(up-modify-goal desired-number-mills c:= 5)
	(up-modify-goal desired-number-miningcamps c:= 5)
)

(defrule
	(goal resources-depleted YES)
=>
	(up-modify-sn sn-food-gatherer-percentage c:= 100)
	(up-modify-sn sn-wood-gatherer-percentage c:= 0)
	(up-modify-sn sn-gold-gatherer-percentage c:= 0)
	(up-modify-sn sn-stone-gatherer-percentage c:= 0)
)

(defrule
	(up-compare-sn mill-max-distance != mill-max-distance)
=>
	(up-modify-sn sn-mill-max-distance g:= mill-max-distance)
)

(defrule
	(up-compare-sn sn-lumber-camp-max-distance != lumbercamp-max-distance)
=>
	(up-modify-sn sn-lumber-camp-max-distance g:= lumbercamp-max-distance)
)

(defrule
	(up-compare-sn sn-mining-camp-max-distance != miningcamp-max-distance)
=>
	(up-modify-sn sn-mining-camp-max-distance g:= miningcamp-max-distance)
)

(defrule
	(up-compare-sn sn-maximum-hunt-drop-distance != max-hunt-distance)
=>
	(up-modify-sn sn-maximum-hunt-drop-distance g:= max-hunt-distance)
)

(defrule
	(up-compare-sn sn-maximum-food-drop-distance != max-food-distance)
=>
	(up-modify-sn sn-maximum-food-drop-distance g:= max-food-distance)
)

(defrule
	(up-compare-sn sn-maximum-wood-drop-distance != max-wood-distance)
=>
	(up-modify-sn sn-maximum-wood-drop-distance g:= max-wood-distance)
)

(defrule
	(up-compare-sn sn-maximum-stone-drop-distance != max-stone-distance)
=>
	(up-modify-sn sn-maximum-stone-drop-distance g:= max-stone-distance)
)

(defrule
	(up-compare-sn sn-maximum-gold-drop-distance != max-gold-distance)
=>
	(up-modify-sn sn-maximum-gold-drop-distance g:= max-gold-distance)
)

;upgrade requirements/settings

(defrule
	(up-compare-goal current-phase g:!= previous-phase)
	(goal current-phase 1)
=>
	(set-goal upgrade-military-lines 0)
	(set-goal upgrade-military-smith 0)
	(set-goal upgrade-military-generic 0)
	(set-goal upgrade-military-villager-requirement 24)
	(set-goal upgrade-economy 0)
	(set-goal upgrade-economy-villager-requirement 24)
	(set-goal upgrade-fortifications 0)
	(set-goal upgrade-fortifications-villager-requirement 24)
	(set-goal upgrade-navy 0)
	(set-goal upgrade-navy-villager-requirement 24)
	(set-goal upgrade-other 0)
	(set-goal upgrade-other-villager-requirement 24)
	
	(disable-self)
)

(defrule
	(up-compare-goal current-phase g:!= previous-phase)
	(goal current-phase 2)
=>
	(set-goal upgrade-military-lines 0)
	(set-goal upgrade-military-smith 0)
	(set-goal upgrade-military-generic 0)
	(set-goal upgrade-military-villager-requirement 24)
	(set-goal upgrade-economy 0)
	(set-goal upgrade-economy-villager-requirement 24)
	(set-goal upgrade-fortifications 0)
	(set-goal upgrade-fortifications-villager-requirement 24)
	(set-goal upgrade-navy 0)
	(set-goal upgrade-navy-villager-requirement 24)
	(set-goal upgrade-other 0)
	(set-goal upgrade-other-villager-requirement 24)
	
	(disable-self)
)

(defrule
	(up-compare-goal current-phase g:!= previous-phase)
	(goal current-phase 3)
=>
	(set-goal upgrade-military-lines 0)
	(set-goal upgrade-military-smith 0)
	(set-goal upgrade-military-generic 0)
	(set-goal upgrade-military-villager-requirement 27)
	(set-goal upgrade-economy 0)
	(set-goal upgrade-economy-villager-requirement 27)
	(set-goal upgrade-fortifications 0)
	(set-goal upgrade-fortifications-villager-requirement 27)
	(set-goal upgrade-navy 0)
	(set-goal upgrade-navy-villager-requirement 27)
	(set-goal upgrade-other 0)
	(set-goal upgrade-other-villager-requirement 27)
	
	(disable-self)
)

(defrule
	(up-compare-goal current-phase g:!= previous-phase)
	(goal current-phase 4)
=>
	(set-goal upgrade-military-lines 1)
	(set-goal upgrade-military-smith 1)
	(set-goal upgrade-military-generic 1)
	(set-goal upgrade-military-villager-requirement 27)
	(set-goal upgrade-economy 1)
	(set-goal upgrade-economy-villager-requirement 27)
	(set-goal upgrade-fortifications 1)
	(set-goal upgrade-fortifications-villager-requirement 27)
	(set-goal upgrade-navy 1)
	(set-goal upgrade-navy-villager-requirement 27)
	(set-goal upgrade-other 1)
	(set-goal upgrade-other-villager-requirement 27)
	
	(disable-self)
)

(defrule
	(up-compare-goal current-phase g:!= previous-phase)
	(goal current-phase 5)
=>
	(set-goal upgrade-military-lines 1)
	(set-goal upgrade-military-smith 1)
	(set-goal upgrade-military-generic 1)
	(set-goal upgrade-military-villager-requirement 27)
	(set-goal upgrade-economy 1)
	(set-goal upgrade-economy-villager-requirement 27)
	(set-goal upgrade-fortifications 1)
	(set-goal upgrade-fortifications-villager-requirement 27)
	(set-goal upgrade-navy 1)
	(set-goal upgrade-navy-villager-requirement 27)
	(set-goal upgrade-other 1)
	(set-goal upgrade-other-villager-requirement 27)
	
	(disable-self)
)

;run once, timer handles it afterwards
(defrule
	(and
		(building-type-count-total mill >= 1)
		(and
			(dropsite-min-distance hunting <= 15)
			(dropsite-min-distance food <= 15)
		)
	)
=>
	(set-goal dependent-farms 1)
	(chat-local-to-self "Disable farms, food is near")
	(disable-self)
)

(defrule
	(and
		(goal dependent-farms 0)
		(building-type-count-total mill == 0)
	)
=>
	(set-goal dependent-farms 1)
	(chat-local-to-self "Disable farms, no mill")
)

(defrule
	(current-age == feudal-age)
	(and
		(goal dependent-farms 0)
		(and
			(building-type-count-total market == 0)
			(building-type-count-total blacksmith == 0)
		)
	)
=>
	(set-goal dependent-farms 1)
	(chat-local-to-self "Disable farms, middle antiquity age up structures missing")
)

(defrule
	(timer-triggered farm-check-timer)
	(and
		(building-type-count-total mill >= 1)
		(and
			(dropsite-min-distance hunting <= 15)
			(dropsite-min-distance food <= 15)
		)
	)
=>
	(set-goal dependent-farms 1)
	(disable-timer farm-check-timer)
	(chat-local-to-self "Disable farms, food is near")
)

(defrule
	(timer-triggered farm-check-timer)
	(and
		(building-type-count-total mill >= 1)
		(or
			(dropsite-min-distance food > 15)
			(dropsite-min-distance hunting > 15)
		)
	)
=>
	(set-goal dependent-farms 0)
	(disable-timer farm-check-timer)
	(chat-local-to-self "Enable farms, food is not near")
)

(defrule
	(goal resources-depleted NO)
	(up-object-type-count-total c: villager g:< desired-number-villagers)
	(can-train villager)
=>
	(train villager)
)

(defrule
	(goal resources-depleted YES)
	(up-object-type-count-total c: villager g:< desired-number-farms)
	(can-train villager)
=>
	(train villager)
)

;delete excess villagers, start with idle ones
(defrule
	(goal resources-depleted YES)
	(up-object-type-count-total c: villager g:> desired-number-farms)
=>
	(up-delete-idle-units idle-type-villager)
	(disable-self)
)

(defrule
	(goal resources-depleted YES)
	(up-idle-unit-count idle-type-villager < 5)
	(up-object-type-count-total c: villager g:> desired-number-farms)
=>
	(delete-unit villager)
)

(defrule
	(unit-type-count-total fishing-ship g:< desired-number-fishing)
	(goal fish-present YES)
	(wood-amount > 180)
	(can-train fishing-ship)
=>
	(train fishing-ship)
)

(defrule
	(unit-type-count-total fishing-ship < 5)
	(building-type-count-total fish-trap > 0)
	(wood-amount > 180)
	(can-train fishing-ship)
=>
	(train fishing-ship)
)

(defrule
	(unit-type-count-total trade-cart g:< desired-number-carts)
	(or	
		(players-building-type-count any-ally market >= 1)
		(players-building-type-count any-neutral market >= 1)
	)
	(can-train trade-cart)
=>
	(train trade-cart)
)

(defrule
	(unit-type-count-total trade-cog g:< desired-number-cogs)
	(wood-amount > 200)
	(or	
		(players-building-type-count any-ally dock >= 1)
		(players-building-type-count any-neutral dock >= 1)
	)
	(can-train trade-cog)
=>
	(train trade-cog)
)

;Increase trade carts massively after resources are depleted.
(defrule
	(goal resources-depleted YES)
=>
	(up-modify-goal desired-number-carts g:= gl-thirty-percent)
	
	(disable-self)
)

;Fish traps and sea towers need work before these are useful, atm they just stop villagers from doing construction projects
;(defrule
;	(unit-type-count-total construction-ship == 0)
;	(can-train construction-ship)
;=>
;	(train construction-ship)
;)

;resource dropoff deletions so the AI can keep up with diminishing resources
;also, delete fishing ships once fish are gone
(defrule
	(and
		(goal wood-present YES)
		(dropsite-min-distance wood > 8)
	)
=>
	(set-goal delete-wood-dropoff 1)
)

(defrule
	(and
		(goal delete-wood-dropoff 1)
		(building-type-count-total lumber-camp g:>= desired-number-lumbercamps)
	)
=>
	(delete-building lumber-camp)
	(set-goal delete-wood-dropoff 0)
)

(defrule
	(and
		(goal gold-present YES)
		(goal stone-present YES)
	)
	(or
		(dropsite-min-distance stone > 8)
		(dropsite-min-distance gold > 8)
	)
=>
	(set-goal delete-mining-dropoff 1)
)

(defrule
	(and
		(goal delete-mining-dropoff 1)
		(building-type-count-total mining-camp g:>= desired-number-miningcamps)
	)
=>
	(delete-building mining-camp)
	(set-goal delete-mining-dropoff 0)
)

(defrule
	(and
		(goal fish-present NO)
		(unit-type-count fishing-ship > 5)
	)
=>
	(delete-unit fishing-ship)
)