
;civ specific structure preferences

(defrule
	(goal current-phase 1)
=>
	(up-modify-goal desired-number-towncenters c:= 1)
	(up-modify-goal desired-number-barracks c:= 1)
	(up-modify-goal desired-number-ranges c:= 0)
	(up-modify-goal desired-number-stables c:= 0)
	(up-modify-goal desired-number-workshops c:= 0)
	(up-modify-goal desired-number-blacksmiths c:= 0)
	(up-modify-goal desired-number-markets c:= 0)
	(up-modify-goal desired-number-docks c:= 1)
	(up-modify-goal desired-number-universities c:= 0)
	(up-modify-goal desired-number-monasteries c:= 0)
	
	(disable-self)
)

(defrule
	(goal current-phase 1)
=>
	(up-modify-goal desired-number-castles c:= 0)
	(up-modify-goal desired-number-outposts c:= 0)
	(up-modify-goal desired-number-watchtowers c:= 0)
	(up-modify-goal desired-number-seatowers c:= 0)
	(up-modify-goal desired-number-shipyards c:= 0)
	
	(disable-self)
)

(defrule
	(goal current-phase 2)
=>
	(up-modify-goal desired-number-towncenters c:= 1)
	(up-modify-goal desired-number-barracks c:= 1)
	(up-modify-goal desired-number-ranges c:= 1)
	(up-modify-goal desired-number-stables c:= 1)
	(up-modify-goal desired-number-workshops c:= 0)
	(up-modify-goal desired-number-blacksmiths c:= 1)
	(up-modify-goal desired-number-markets c:= 1)
	(up-modify-goal desired-number-docks c:= 1)
	(up-modify-goal desired-number-universities c:= 1)
	(up-modify-goal desired-number-monasteries c:= 0)
	
	(disable-self)
)

(defrule
	(goal current-phase 2)
=>
	(up-modify-goal desired-number-castles c:= 0)
	(up-modify-goal desired-number-outposts c:= 0)
	(up-modify-goal desired-number-watchtowers c:= 0)
	(up-modify-goal desired-number-seatowers c:= 0)
	(up-modify-goal desired-number-shipyards c:= 0)
	
	(disable-self)
)

(defrule
	(goal current-phase 3)
=>
	(up-modify-goal desired-number-towncenters c:= 1)
	(up-modify-goal desired-number-barracks c:= 1)
	(up-modify-goal desired-number-ranges c:= 1)
	(up-modify-goal desired-number-stables c:= 1)
	(up-modify-goal desired-number-workshops c:= 0)
	(up-modify-goal desired-number-blacksmiths c:= 1)
	(up-modify-goal desired-number-markets c:= 1)
	(up-modify-goal desired-number-docks c:= 2)
	(up-modify-goal desired-number-universities c:= 1)
	(up-modify-goal desired-number-monasteries c:= 0)
	
	(disable-self)
)

(defrule
	(goal current-phase 3)
=>
	(up-modify-goal desired-number-castles c:= 0)
	(up-modify-goal desired-number-outposts c:= 2)
	(up-modify-goal desired-number-watchtowers c:= 4)
	(up-modify-goal desired-number-seatowers c:= 4)
	(up-modify-goal desired-number-shipyards c:= 8)
	
	(disable-self)
)

(defrule
	(goal current-phase 4)
=>
	(up-modify-goal desired-number-towncenters c:= 4)
	(up-modify-goal desired-number-barracks c:= 1)
	(up-modify-goal desired-number-ranges c:= 1)
	(up-modify-goal desired-number-stables c:= 1)
	(up-modify-goal desired-number-workshops c:= 1)
	(up-modify-goal desired-number-blacksmiths c:= 1)
	(up-modify-goal desired-number-markets c:= 1)
	(up-modify-goal desired-number-docks c:= 2)
	(up-modify-goal desired-number-universities c:= 1)
	(up-modify-goal desired-number-monasteries c:= 1)
	
	(disable-self)
)

(defrule
	(goal current-phase 4)
=>
	(up-modify-goal desired-number-castles c:= 1)
	(up-modify-goal desired-number-outposts c:= 4)
	(up-modify-goal desired-number-watchtowers c:= 10)
	(up-modify-goal desired-number-seatowers c:= 5)
	(up-modify-goal desired-number-shipyards c:= 8)
	
	(disable-self)
)

(defrule
	(goal current-phase 5)
=>
	(up-modify-goal desired-number-towncenters c:= 8)
	(up-modify-goal desired-number-barracks c:= 5)
	(up-modify-goal desired-number-ranges c:= 4)
	(up-modify-goal desired-number-stables c:= 2)
	(up-modify-goal desired-number-workshops c:= 4)
	(up-modify-goal desired-number-blacksmiths c:= 1)
	(up-modify-goal desired-number-markets c:= 2)
	(up-modify-goal desired-number-docks c:= 2)
	(up-modify-goal desired-number-universities c:= 1)
	(up-modify-goal desired-number-monasteries c:= 1)
	
	(disable-self)
)

(defrule
	(goal current-phase 5)
=>
	(up-modify-goal desired-number-castles c:= 4)
	(up-modify-goal desired-number-outposts c:= 6)
	(up-modify-goal desired-number-watchtowers c:= 10)
	(up-modify-goal desired-number-seatowers c:= 5)
	(up-modify-goal desired-number-shipyards c:= 8)
	
	(disable-self)
)

;Always Train Militia/Swordsmen
(defrule
	(goal current-phase 5)
	(unit-type-count-total militiaman-line g:< desired-number-antiinfantry)
	(can-train militiaman-line)
=>
	(train militiaman-line)
)

;Always have some Spearmen
(defrule
	(goal current-phase 5)
	(unit-type-count-total spearman-line g:< gl-one-percent)
	(can-train spearman-line)
=>
	(train spearman-line)
)

;Otherwise, train them to counter Cavalry and Cavalry Archers
(defrule
	(goal current-phase 5)
	(or
		(goal train-anti-cavalry 1)
		(goal train-anti-cavalryarcher 1)
	)
	(unit-type-count-total spearman-line g:< desired-number-anticavalrytrash)
	(can-train spearman-line)
=>
	(train spearman-line)
)

;Use Archers against Cavalry
(defrule
	(goal current-phase 5)
	(goal train-anti-cavalry 1)
	(unit-type-count-total bowman-line g:< desired-number-anticavalry)
	(can-train bowman-line)
=>
	(train bowman-line)
)

;Use Crossbowmen against Infantry
(defrule
	(goal current-phase 5)
	(goal train-anti-infantry 1)
	(unit-type-count-total crossbowman g:< desired-number-antiinfantry)
	(can-train crossbowman)
=>
	(train crossbowman)
)

;Use Skirmishers against Archers & Cavalry Archers
(defrule
	(goal current-phase 5)
	(or
		(goal train-anti-archer 1)
		(goal train-anti-cavalryarcher 1)
	)
	(unit-type-count-total skirmisher-line g:< desired-number-antiarchertrash)
	(can-train skirmisher-line)
=>
	(train skirmisher-line)
)

;Use Mangonels against Archers(but not Cavalry Archers) in addition to Skirmishers
(defrule
	(goal current-phase 5)
	(goal train-anti-archer 1)
	(unit-type-count-total mangonel-line g:< desired-number-antiarcher)
	(can-train mangonel-line)
=>
	(train mangonel-line)
)

;Scorpions are used to counter infantry, archers, cav archers
(defrule
	(goal current-phase 5)
	(or
		(goal train-anti-infantry 1)
		(or
			(goal train-anti-archer 1)
			(goal train-anti-cavalryarcher 1)
		)
	)
	(unit-type-count-total scorpion-line g:< desired-number-antiarcher)
	(can-train scorpion-line)
=>
	(train scorpion-line)
)

;Catapults are used when there are enemy siege weapons present
(defrule
	(goal current-phase 5)
	(goal train-anti-siege 1)
	(unit-type-count-total catapult g:< desired-number-antisiege)
	(can-train catapult)
=>
	(train catapult)
)

;The Phoenicians wield Cavalry against Infantry, Archers, and Siege
(defrule
	(goal current-phase 5)
	(or
		(goal train-anti-infantry 1)
		(or
			(goal train-anti-archer 1)
			(goal train-anti-siege 1)
		)
	)
	(unit-type-count-total cavalry-line g:< desired-number-antisiege)
	(can-train cavalry-line)
=>
	(train cavalry-line)
)

;Scout/Light Cavalry are also used as anti-priest & anti-siege trash
(defrule
	(goal current-phase 5)
	(or
		(goal train-anti-priest 1)
		(goal train-anti-siege 1)
	)
	(unit-type-count-total scout-cavalry-line g:< gl-one-percent)
	(can-train scout-cavalry-line)
=>
	(train scout-cavalry-line)
)

;Navy, generic train rules that affect <x>reme etc training are in military-units-common.per
;Train Quadriremes/Quinqueremes to complement our <x>remes and Hemiolia
(defrule
	(goal current-phase 5)
	(or
		(goal train-remes 1)
		(goal train-hemiolia 1)
	)
	(wood-amount > 300)
	(unit-type-count-total quadrireme-line g:< desired-number-qremes)
	(can-train quadrireme-line)
=>
	(train quadrireme-line)
)

;Train Juggernauts if you cannot afford Octeres
(defrule
	(goal current-phase 5)
	(not
		(can-afford-unit octeres)
	)
	(wood-amount > 250)
	(unit-type-count-total juggernaut-line g:< desired-number-juggernauts)
	(can-train juggernaut-line)
=>
	(train juggernaut-line)
)

;Else train Octeres
(defrule
	(goal current-phase 5)
	(wood-amount > 350)
	(unit-type-count-total octeres g:< desired-number-octeres)
	(can-train octeres)
=>
	(train octeres)
)


(defrule
	(goal current-phase 5)
	(goal train-anti-infantry 1)
	(unit-type-count-total balearic-slinger-line g:< desired-number-uniqueunittwo)
	(can-train balearic-slinger-line)
=>
	(train balearic-slinger-line)
)

; Upgrade Balearic Slinger
(defrule
	(up-compare-goal villager-count g:>= upgrade-military-villager-requirement)
	(goal upgrade-military-lines 1)
	(can-research-with-escrow ri-elite-balearic-slinger)
=>
	(release-escrow food)
	(release-escrow gold)
	(research ri-elite-balearic-slinger)
	(chat-local-to-self "research elite balearic slinger")
)

;unique technologies

;Thalassocracy if map is sea based
(defrule
	(up-compare-goal villager-count g:>= upgrade-other-villager-requirement)
	(goal upgrade-other 1)
	(goal sea-game 1)
	(can-train-with-escrow ut-thalassocracy)
=>
	(release-escrow wood)
	(release-escrow gold)
	(train ut-thalassocracy)
	(chat-local-to-self "research thalassocracy(UT)")
)

;Cedars of Lebanon if map is not sea based
(defrule
	(up-compare-goal villager-count g:>= upgrade-other-villager-requirement)
	(goal upgrade-other 1)
	(goal sea-game 0)
	(can-train-with-escrow ut-cedars-of-lebanon)
=>
	(release-escrow wood)
	(release-escrow gold)
	(train ut-cedars-of-lebanon)
	(chat-local-to-self "research cedars of lebanon(UT)")
)

;Tyrian Dye if gold is low
(defrule
	(up-compare-goal villager-count g:>= upgrade-other-villager-requirement)
	(goal upgrade-other 1)
	(gold-amount < 100)
	(can-train-with-escrow ut-tyrian-dye)
=>
	(release-escrow wood)
	(release-escrow gold)
	(train ut-tyrian-dye)
	(chat-local-to-self "research tyrian dye(UT)")
)

;Sidonian Glass if stone is low
(defrule
	(up-compare-goal villager-count g:>= upgrade-other-villager-requirement)
	(goal upgrade-other 1)
	(stone-amount < 100)
	(can-train-with-escrow ut-sidonian-glass)
=>
	(release-escrow wood)
	(release-escrow gold)
	(train ut-sidonian-glass)
	(chat-local-to-self "research sidonian glass(UT)")
)