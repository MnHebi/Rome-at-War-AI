
;define civ specialties
(defrule
	(true)
=>
	(set-goal civ-specialty1 SPE-INFANTRY)
	(set-goal civ-specialty2 SPE-NAVAL)
	(set-goal civ-specialty3 SPE-NONE)
	
	(disable-self)
)

;Define unique unit properties
;Unique Unit 1-2 are trained from Castle
;Unique Unit 3-4 are trained from Barracks
;Unique Unit 5-6 are trained from Stable
;Unique Unit 7-8 are trained from Archery Range
;Unique Unit 9-10 are trained from Siege Workshop
;Unique Unit 11-12 are trained from Shipyard
;Unique Unit 13-14 are trained from Town Center

(defrule
	(true)
=>
	(set-goal uu1-type INFANTRY-UU)
	(set-goal uu2-type NO-UU)
	(set-goal uu3-type NO-UU)
	(set-goal uu4-type NO-UU)
	(set-goal uu5-type NO-UU)
	(set-goal uu6-type NO-UU)
	(set-goal uu7-type NO-UU)
	(set-goal uu8-type NO-UU)
	(set-goal uu9-type NO-UU)
	(set-goal uu10-type NO-UU)
	(set-goal uu11-type NO-UU)
	(set-goal uu12-type NO-UU)
	(set-goal uu13-type NO-UU)
	(set-goal uu14-type NO-UU)
	
	(disable-self)
)

(defrule
	(true)
=>
	(set-goal uu1-anti ANTI-INFANTRY)
	(set-goal uu2-anti ANTI-NONE)
	(set-goal uu3-anti ANTI-NONE)
	(set-goal uu4-anti ANTI-NONE)
	(set-goal uu5-anti ANTI-NONE)
	(set-goal uu7-anti ANTI-NONE)
	(set-goal uu8-anti ANTI-NONE)
	(set-goal uu9-anti ANTI-NONE)
	(set-goal uu10-anti ANTI-NONE)
	(set-goal uu11-anti ANTI-NONE)
	(set-goal uu12-anti ANTI-NONE)
	(set-goal uu13-anti ANTI-NONE)
	(set-goal uu14-anti ANTI-NONE)
	
	(disable-self)
)

(defrule
	(true)
=>
	(set-goal uu1-weak WEAK-ARCHER)
	(set-goal uu2-weak WEAK-NONE)
	(set-goal uu3-weak WEAK-NONE)
	(set-goal uu4-weak WEAK-NONE)
	(set-goal uu5-weak WEAK-NONE)
	(set-goal uu7-weak WEAK-NONE)
	(set-goal uu8-weak WEAK-NONE)
	(set-goal uu9-weak WEAK-NONE)
	(set-goal uu10-weak WEAK-NONE)
	(set-goal uu11-weak WEAK-NONE)
	(set-goal uu12-weak WEAK-NONE)
	(set-goal uu13-weak WEAK-NONE)
	(set-goal uu14-weak WEAK-NONE)
	
	(disable-self)
)

;Define unit preferences & strategies depending on enemy civ so we counter them properly

;unit affinity
;if unit has 5 upgrades, affinity goes up by 20% each step
;if unit has 3 upgrades, affinity goes up by 33% each step
;if unit has 2 upgrades, affinity goes up by 50% each step
;if unit is not available or not desired, affinity is 0%
; so 99% and 100% are equal affinities all things considered
; 66%, and 50% are equal affinities all things considered
; 33%, and 20% are equal affinities all things considered
; Where unit would ordinarily have 5 upgrades, but their affinity is either 80% or 60% will use these units only in rushes
; If civ has good bonuses then 80% affinity units will be used as quaternary units.
; for Priests, and Brahmin affinities are
; 25% is added if Redemption is available for civ
; 25% is added if Block Printing is available for civ
; 25% is added if Faith is available for civ
; 25% is added if Illumination is available for civ
; 25% is added if civ has Good Priests trait set
; For ships Juggernauts do not have affinity, they will always be built if they are available

(defrule
	(true)
=>
	(set-goal champion-affinity 100)
	(set-goal spearman-affinity 99)
	(set-goal horus-affinity 0)
	
	(disable-self)
)

(defrule
	(true)
=>	
	(set-goal archer-affinity 99)
	(set-goal skirmisher-affinity 100)
	(set-goal cavarcher-affinity 0)
	(set-goal camarcher-affinity 0)
	(set-goal elearcher-affinity 0)
	(set-goal chrarcher-affinity 0)
	
	(disable-self)
)

(defrule
	(true)
=>	
	(set-goal scavalry-affinity 66)
	(set-goal cavalry-affinity 33)
	(set-goal crider-affinity 0)
	(set-goal belephant-affinity 0)
	(set-goal chariot-affinity 0)
	
	(disable-self)
)
	
(defrule
	(true)
=>
	(set-goal ram-affinity 66)
	(set-goal mangonel-affinity 99)
	(set-goal scorpion-affinity 100)
	(set-goal catapult-affinity 100)
	
	(disable-self)
)

(defrule
	(goal has-redemption YES)
=>
	(up-modify-goal priest-affinity c:+ 25)
	
	(disable-self)
)

(defrule
	(goal has-blockprinting YES)
=>
	(up-modify-goal priest-affinity c:+ 25)
	
	(disable-self)
)

(defrule
	(goal has-faith YES)
=>
	(up-modify-goal priest-affinity c:+ 25)
	
	(disable-self)
)

(defrule
	(goal has-illumination YES)
=>
	(up-modify-goal priest-affinity c:+ 25)
	
	(disable-self)
)

(defrule
	(goal good-priests YES)
=>
	(up-modify-goal priest-affinity c:+ 25)
	
	(disable-self)
)
	
(defrule
	(true)
=>
	(set-goal sship-affinity 66)
	(set-goal rship-affinity 99)
	(set-goal fship-affinity 99)
	(set-goal dship-affinity 66)
	(set-goal hship-affinity 66)
	(set-goal qship-affinity 100)
	(set-goal oship-affinity 100)
	(set-goal bship-affinity 100)
	
	(disable-self)
)

;default rush affinities

(defrule
	(true)
=>
	(up-modify-goal drush-affinity c:+ 2)
	(up-modify-goal fcast-affinity c:+ 0)
	(up-modify-goal trush-affinity c:+ 0)
	(up-modify-goal hrush-affinity c:+ 0)
	(up-modify-goal krush-affinity c:+ 0)
	(up-modify-goal mush-affinity c:+ 0)
	(up-modify-goal sprush-affinity c:+ 0)
	(up-modify-goal scush-affinity c:+ 0)
	(up-modify-goal skrush-affinity c:+ 0)
	(up-modify-goal sgush-affinity c:+ 0)
	(up-modify-goal cush-affinity c:+ 0)
	(up-modify-goal lush-affinity c:+ 0)
	(up-modify-goal ilush-affinity c:+ 0)
	(up-modify-goal fc-affinity c:+ 2)
	
	(disable-self)
)

;enemy civs will alter rush affinities
;unit affinities will only be altered if it is highly beneficial or enemy has perfect unit to counter that unit in that matchup
;some techs might only be researched in certain matchups
#load-if-defined UP-BERBERS-CIV-ENEMY ; Armenians

#end-if
#load-if-defined UP-LITHUANIANS-CIV-ENEMY ; Athenians

;mirror matchup
(defrule
	(true)
=>
	(up-modify-goal drush-affinity c:- 2) ; don't drush in a mirror 
	(up-modify-goal fcast-affinity c:+ 0)
	(up-modify-goal trush-affinity c:+ 0)
	(up-modify-goal hrush-affinity c:+ 0)
	(up-modify-goal krush-affinity c:+ 0)
	(up-modify-goal mush-affinity c:+ 0)
	(up-modify-goal sprush-affinity c:+ 0)
	(up-modify-goal scush-affinity c:+ 0)
	(up-modify-goal skrush-affinity c:+ 0)
	(up-modify-goal sgush-affinity c:+ 0)
	(up-modify-goal cush-affinity c:+ 0)
	(up-modify-goal lush-affinity c:+ 0)
	(up-modify-goal ilush-affinity c:+ 0)
	(up-modify-goal fc-affinity c:+ 0)
	
	(disable-self)
)

#end-if
#load-if-defined UP-BRITON-CIV-ENEMY ; Britons

#end-if
#load-if-defined UP-PORTUGUESE-CIV-ENEMY ; Carthagians

#end-if
#load-if-defined UP-VIETNAMESE-CIV-ENEMY ; Cretans

#end-if
#load-if-defined UP-ETHIOPIANS-CIV-ENEMY ; Dacians

#end-if
#load-if-defined UP-AZTEC-CIV-ENEMY ; Egyptians

#end-if
#load-if-defined UP-FRANKISH-CIV-ENEMY ; Gauls

#end-if
#load-if-defined UP-TEUTONIC-CIV-ENEMY ; Germani

#end-if
#load-if-defined UP-GOTHIC-CIV-ENEMY ; Goths

#end-if
#load-if-defined UP-GURJARAS-CIV-ENEMY ; Gupta 

#end-if
#load-if-defined UP-CHINESE-CIV-ENEMY ; Han

#end-if
#load-if-defined UP-HUN-CIV-ENEMY ; Huns

#end-if
#load-if-defined UP-SPANISH-CIV-ENEMY ; Iberians

#end-if
#load-if-defined UP-BULGARIANS-CIV-ENEMY ; Illyrians

#end-if
#load-if-defined UP-SARACEN-CIV-ENEMY ; Judeans

#end-if
#load-if-defined UP-INDIAN-CIV-ENEMY ; Kushans

#end-if
#load-if-defined UP-KOREAN-CIV-ENEMY ; Macedonians

#end-if
#load-if-defined UP-BENGALIS-CIV-ENEMY ; Mauryans

#end-if
#load-if-defined UP-DRAVIDIANS-CIV-ENEMY ; Nanda

#end-if
#load-if-defined UP-MAYAN-CIV-ENEMY ; Nubians

#end-if
#load-if-defined UP-INCAN-CIV-ENEMY ; Numidians

#end-if
#load-if-defined UP-TURKISH-CIV-ENEMY ; Parthians

#end-if
#load-if-defined UP-PERSIAN-CIV-ENEMY ; Persians

#end-if
#load-if-defined UP-MONGOL-CIV-ENEMY ; Phoenicians

#end-if
#load-if-defined UP-CELTIC-CIV-ENEMY ; Picts

#end-if
#load-if-defined UP-KHMER-CIV-ENEMY ; Pontus

#end-if
#load-if-defined UP-BYZANTINE-CIV-ENEMY ; Roman Empire

#end-if
#load-if-defined UP-ITALIAN-CIV-ENEMY ; Roman Republic

#end-if
#load-if-defined UP-CUMANS-CIV-ENEMY ; Scythians

#end-if
#load-if-defined UP-BURMESE-CIV-ENEMY ; Seleucids

#end-if
#load-if-defined UP-JAPANESE-CIV-ENEMY ; Spartans

#end-if
#load-if-defined UP-MALAY-CIV-ENEMY ; Syracusans

#end-if
#load-if-defined UP-MALIAN-CIV-ENEMY ; Thracians

#end-if

;civ specific unit preferences

(defrule
	(up-compare-goal current-phase < 4)
	(and
		(not
			(goal primary-unit SPEARMAN)
		)
		(up-compare-goal spearman-affinity >= 99)
	)
=>
	(set-goal primary-unit SPEARMAN)
)

(defrule
	(up-compare-goal current-phase < 4)
	(and
		(not
			(goal secondary-unit SKIRMISHER)
		)
		(up-compare-goal skirmisher-affinity >= 99)
	)
=>
	(set-goal secondary-unit SKIRMISHER)
)

(defrule
	(up-compare-goal current-phase < 4)
	(and
		(not
			(goal tertiary-unit ARCHER)
		)
		(up-compare-goal archer-affinity >= 99)
	)
=>
	(set-goal tertiary-unit ARCHER)
)

(defrule
	(up-compare-goal current-phase < 4)
	(and
		(not
			(goal quaternary-unit CHAMPION)
		)
		(up-compare-goal archer-affinity >= 99)
	)
=>
	(set-goal quaternary-unit CHAMPION)
)

(defrule
	(up-compare-goal current-phase >= 4)
	(and
		(not
			(goal primary-unit SPEARMAN)
		)
		(up-compare-goal spearman-affinity >= 99)
	)
=>
	(set-goal primary-unit SPEARMAN)
)

(defrule
	(up-compare-goal current-phase >= 4)
	(and
		(not
			(goal secondary-unit ARCHER)
		)
		(up-compare-goal archer-affinity >= 99)
	)
=>
	(set-goal secondary-unit ARCHER)
)

(defrule
	(up-compare-goal current-phase >= 4)
	(and
		(not
			(goal tertiary-unit SKIRMISHER)
		)
		(up-compare-goal skirmisher-affinity >= 99)
	)
=>
	(set-goal tertiary-unit SKIRMISHER)
)

(defrule
	(up-compare-goal current-phase >= 4)
	(and
		(not
			(goal quaternary-unit PRIEST)
		)
		(up-compare-goal priest-affinity >= 100)
	)
=>
	(set-goal quaternary-unit PRIEST)
)

(defrule
	(up-compare-goal current-phase >= 4)
	(not
		(goal secondary-support-unit SCAVALRY)
	)
=>
	(set-goal secondary-support-unit SCAVALRY)
)

;civ specific structure preferences

(defrule
	(goal current-phase 1)
=>
	(up-modify-goal desired-number-towncenters c:= 1)
	(up-modify-goal desired-number-barracks c:= 1)
	(up-modify-goal desired-number-ranges c:= 0)
	(up-modify-goal desired-number-stables c:= 0)
	(up-modify-goal desired-number-workshops c:= 0)
	(up-modify-goal desired-number-blacksmiths c:= 0)
	(up-modify-goal desired-number-markets c:= 0)
	(up-modify-goal desired-number-docks c:= 1)
	(up-modify-goal desired-number-universities c:= 0)
	(up-modify-goal desired-number-monasteries c:= 0)
	
	(disable-self)
)

(defrule
	(goal current-phase 1)
=>
	(up-modify-goal desired-number-castles c:= 0)
	(up-modify-goal desired-number-outposts c:= 0)
	(up-modify-goal desired-number-watchtowers c:= 0)
	(up-modify-goal desired-number-seatowers c:= 0)
	(up-modify-goal desired-number-shipyards c:= 0)
	
	(disable-self)
)

(defrule
	(goal current-phase 2)
=>
	(up-modify-goal desired-number-towncenters c:= 1)
	(up-modify-goal desired-number-barracks c:= 1)
	(up-modify-goal desired-number-ranges c:= 1)
	(up-modify-goal desired-number-stables c:= 1)
	(up-modify-goal desired-number-workshops c:= 0)
	(up-modify-goal desired-number-blacksmiths c:= 1)
	(up-modify-goal desired-number-markets c:= 1)
	(up-modify-goal desired-number-docks c:= 1)
	(up-modify-goal desired-number-universities c:= 1)
	(up-modify-goal desired-number-monasteries c:= 0)
	
	(disable-self)
)

(defrule
	(goal current-phase 2)
=>
	(up-modify-goal desired-number-castles c:= 0)
	(up-modify-goal desired-number-outposts c:= 0)
	(up-modify-goal desired-number-watchtowers c:= 0)
	(up-modify-goal desired-number-seatowers c:= 0)
	(up-modify-goal desired-number-shipyards c:= 0)
	
	(disable-self)
)

(defrule
	(goal current-phase 3)
=>
	(up-modify-goal desired-number-towncenters c:= 1)
	(up-modify-goal desired-number-barracks c:= 1)
	(up-modify-goal desired-number-ranges c:= 1)
	(up-modify-goal desired-number-stables c:= 1)
	(up-modify-goal desired-number-workshops c:= 0)
	(up-modify-goal desired-number-blacksmiths c:= 1)
	(up-modify-goal desired-number-markets c:= 1)
	(up-modify-goal desired-number-docks c:= 2)
	(up-modify-goal desired-number-universities c:= 1)
	(up-modify-goal desired-number-monasteries c:= 0)
	
	(disable-self)
)

(defrule
	(goal current-phase 3)
=>
	(up-modify-goal desired-number-castles c:= 0)
	(up-modify-goal desired-number-outposts c:= 2)
	(up-modify-goal desired-number-watchtowers c:= 4)
	(up-modify-goal desired-number-seatowers c:= 4)
	(up-modify-goal desired-number-shipyards c:= 2)
	
	(disable-self)
)

(defrule
	(or
		(goal current-phase 4)
		(or
			(goal current-phase 5)
			(goal current-phase 6)
		)
	)
=>
	(up-modify-goal desired-number-towncenters c:= 4)
	(up-modify-goal desired-number-barracks c:= 3)
	(up-modify-goal desired-number-ranges c:= 2)
	(up-modify-goal desired-number-stables c:= 2)
	(up-modify-goal desired-number-workshops c:= 1)
	(up-modify-goal desired-number-blacksmiths c:= 1)
	(up-modify-goal desired-number-markets c:= 1)
	(up-modify-goal desired-number-docks c:= 2)
	(up-modify-goal desired-number-universities c:= 1)
	(up-modify-goal desired-number-monasteries c:= 1)
	
	(disable-self)
)

(defrule
	(or
		(goal current-phase 4)
		(or
			(goal current-phase 5)
			(goal current-phase 6)
		)
	)
=>
	(up-modify-goal desired-number-castles c:= 1)
	(up-modify-goal desired-number-outposts c:= 4)
	(up-modify-goal desired-number-watchtowers c:= 10)
	(up-modify-goal desired-number-seatowers c:= 5)
	(up-modify-goal desired-number-shipyards c:= 2)
	
	(disable-self)
)

(defrule
	(goal current-phase 7)
=>
	(up-modify-goal desired-number-towncenters c:= 8)
	(up-modify-goal desired-number-barracks c:= 5)
	(up-modify-goal desired-number-ranges c:= 4)
	(up-modify-goal desired-number-stables c:= 4)
	(up-modify-goal desired-number-workshops c:= 4)
	(up-modify-goal desired-number-blacksmiths c:= 1)
	(up-modify-goal desired-number-markets c:= 2)
	(up-modify-goal desired-number-docks c:= 2)
	(up-modify-goal desired-number-universities c:= 1)
	(up-modify-goal desired-number-monasteries c:= 1)
	
	(disable-self)
)

(defrule
	(goal current-phase 7)
=>
	(up-modify-goal desired-number-castles c:= 4)
	(up-modify-goal desired-number-outposts c:= 6)
	(up-modify-goal desired-number-watchtowers c:= 10)
	(up-modify-goal desired-number-seatowers c:= 5)
	(up-modify-goal desired-number-shipyards c:= 8)
	(up-modify-goal desired-number-monasteries c:= 4)
	
	(disable-self)
)

(defrule
	(or
		(goal current-phase 5)
		(or
			(goal current-phase 6)
			(goal current-phase 7)
		)
	)
	(unit-type-count-total taxiarch-line g:< gl-five-percent)
	(can-train taxiarch-line)
=>
	(train taxiarch-line)
)

; Upgrade Taxiarch
(defrule
	(up-compare-goal villager-count g:>= upgrade-military-villager-requirement)
	(goal upgrade-military-lines 1)
	(up-can-research gl-researchescrow-state c: ri-elite-taxiarch)
=>
	(up-research gl-researchescrow-state c: ri-elite-taxiarch)
	(chat-local-to-self "research elite taxiarch")
)

;unique technologies

;Draconian Reforms for Team Games
(defrule
	(up-compare-goal villager-count g:>= upgrade-other-villager-requirement)
	(goal upgrade-other 1)
	(and
		(goal flank-position 1)
		(goal team-game YES)
	)
	(can-research-with-escrow ut-draconian-reforms)
=>
	(release-escrow food)
	(release-escrow gold)
	(research ut-draconian-reforms)
	(chat-local-to-self "research draconian reforms(UT)")
)

;Draconian Reforms for Solo Games
(defrule
	(up-compare-goal villager-count g:>= upgrade-other-villager-requirement)
	(goal upgrade-other 1)
	(goal team-game NO)
	(can-research-with-escrow ut-draconian-reforms)
=>
	(release-escrow food)
	(release-escrow gold)
	(research ut-draconian-reforms)
	(chat-local-to-self "research draconian reforms(UT)")
)

;Solonian Reforms for Team Games
(defrule
	(up-compare-goal villager-count g:>= upgrade-other-villager-requirement)
	(goal upgrade-other 1)
	(and
		(goal flank-position 0)
		(goal team-game YES)
	)
	(can-research-with-escrow ut-solonian-reforms)
=>
	(release-escrow food)
	(release-escrow wood)
	(research ut-solonian-reforms)
	(chat-local-to-self "research solonian reforms(UT)")
)

;Euthytonon for Team Games, will not be done in Solo Games
(defrule
	(up-compare-goal villager-count g:>= upgrade-other-villager-requirement)
	(goal upgrade-other 1)
	(and
		(goal flank-position 1)
		(goal team-game YES)
	)
	(can-research-with-escrow ut-euthytonon)
=>
	(release-escrow wood)
	(release-escrow gold)
	(research ut-euthytonon)
	(chat-local-to-self "research euthytonon(UT)")
)

;Delian League for Team Games
(defrule
	(up-compare-goal villager-count g:>= upgrade-other-villager-requirement)
	(goal upgrade-other 1)
	(and
		(goal flank-position 1)
		(goal team-game YES)
	)
	(can-research-with-escrow ut-delian-league)
=>
	(release-escrow food)
	(release-escrow gold)
	(research ut-delian-league)
	(chat-local-to-self "research delian league(UT)")
)

;Delian League for Solo Games
(defrule
	(up-compare-goal villager-count g:>= upgrade-other-villager-requirement)
	(goal upgrade-other 1)
	(goal team-game NO)
	(can-research-with-escrow ut-delian-league)
=>
	(release-escrow food)
	(release-escrow gold)
	(research ut-delian-league)
	(chat-local-to-self "research delian league(UT)")
)

